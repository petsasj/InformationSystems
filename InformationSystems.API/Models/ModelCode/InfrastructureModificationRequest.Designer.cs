//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace InformationSystems.API.Models
{

    public partial class InfrastructureModificationRequest : XPObject
    {
        Guid fUniqueId;
        public Guid UniqueId
        {
            get { return fUniqueId; }
            set { SetPropertyValue<Guid>(nameof(UniqueId), ref fUniqueId, value); }
        }
        Company fCompany;
        [Association(@"InfrastructureModificationRequestReferencesCompany")]
        public Company Company
        {
            get { return fCompany; }
            set { SetPropertyValue<Company>(nameof(Company), ref fCompany, value); }
        }
        int fInternalId;
        public int InternalId
        {
            get { return fInternalId; }
            set { SetPropertyValue<int>(nameof(InternalId), ref fInternalId, value); }
        }
        bool fSubmitSuccess;
        public bool SubmitSuccess
        {
            get { return fSubmitSuccess; }
            set { SetPropertyValue<bool>(nameof(SubmitSuccess), ref fSubmitSuccess, value); }
        }
        string fCallbackUrl;
        [Size(SizeAttribute.Unlimited)]
        public string CallbackUrl
        {
            get { return fCallbackUrl; }
            set { SetPropertyValue<string>(nameof(CallbackUrl), ref fCallbackUrl, value); }
        }
        DateTime fDateCreated;
        public DateTime DateCreated
        {
            get { return fDateCreated; }
            set { SetPropertyValue<DateTime>(nameof(DateCreated), ref fDateCreated, value); }
        }
        DateTime fDateInitialResponse;
        public DateTime DateInitialResponse
        {
            get { return fDateInitialResponse; }
            set { SetPropertyValue<DateTime>(nameof(DateInitialResponse), ref fDateInitialResponse, value); }
        }
        DateTime? fDateValidated;
        public DateTime? DateValidated
        {
            get { return fDateValidated; }
            set { SetPropertyValue<DateTime?>(nameof(DateValidated), ref fDateValidated, value); }
        }
        DateTime? fDateFinalized;
        public DateTime? DateFinalized
        {
            get { return fDateFinalized; }
            set { SetPropertyValue<DateTime?>(nameof(DateFinalized), ref fDateFinalized, value); }
        }
        DateTime? fDateNotified;
        public DateTime? DateNotified
        {
            get { return fDateNotified; }
            set { SetPropertyValue<DateTime?>(nameof(DateNotified), ref fDateNotified, value); }
        }
        string fInitialResponse;
        [Size(SizeAttribute.Unlimited)]
        public string InitialResponse
        {
            get { return fInitialResponse; }
            set { SetPropertyValue<string>(nameof(InitialResponse), ref fInitialResponse, value); }
        }
        string fOriginalRequest;
        [Size(SizeAttribute.Unlimited)]
        public string OriginalRequest
        {
            get { return fOriginalRequest; }
            set { SetPropertyValue<string>(nameof(OriginalRequest), ref fOriginalRequest, value); }
        }
        string fRequestType;
        public string RequestType
        {
            get { return fRequestType; }
            set { SetPropertyValue<string>(nameof(RequestType), ref fRequestType, value); }
        }
        bool? fApproved;
        public bool? Approved
        {
            get { return fApproved; }
            set { SetPropertyValue<bool?>(nameof(Approved), ref fApproved, value); }
        }
        string fRejectionReason;
        [Size(SizeAttribute.Unlimited)]
        public string RejectionReason
        {
            get { return fRejectionReason; }
            set { SetPropertyValue<string>(nameof(RejectionReason), ref fRejectionReason, value); }
        }
        bool? fHasValidationConflicts;
        public bool? HasValidationConflicts
        {
            get { return fHasValidationConflicts; }
            set { SetPropertyValue<bool?>(nameof(HasValidationConflicts), ref fHasValidationConflicts, value); }
        }
        bool? fProviderConflictNotified;
        public bool? ProviderConflictNotified
        {
            get { return fProviderConflictNotified; }
            set { SetPropertyValue<bool?>(nameof(ProviderConflictNotified), ref fProviderConflictNotified, value); }
        }
        string fInfrastructureType;
        public string InfrastructureType
        {
            get { return fInfrastructureType; }
            set { SetPropertyValue<string>(nameof(InfrastructureType), ref fInfrastructureType, value); }
        }
        [Association(@"InfrastructureReferencesInfrastructureModificationRequest")]
        public XPCollection<Infrastructure> Infrastructures { get { return GetCollection<Infrastructure>(nameof(Infrastructures)); } }
    }

}
